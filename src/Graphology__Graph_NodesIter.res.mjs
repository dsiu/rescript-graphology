// Generated by ReScript, PLEASE EDIT WITH CARE


function MakeNodesIter(C) {
  return {
          nodes: (function (prim) {
              return prim.nodes();
            }),
          forEachNode: (function (prim0, prim1) {
              prim0.forEachNode(prim1);
            }),
          mapNodes: (function (prim0, prim1) {
              return prim0.mapNodes(prim1);
            }),
          filterNodes: (function (prim0, prim1) {
              return prim0.filterNodes(prim1);
            }),
          reduceNodes: (function (prim0, prim1, prim2) {
              return prim0.reduceNodes(prim1, prim2);
            }),
          findNode: (function (prim0, prim1) {
              return prim0.findNode(prim1);
            }),
          someNode: (function (prim0, prim1) {
              return prim0.someNode(prim1);
            }),
          everyNode: (function (prim0, prim1) {
              return prim0.everyNode(prim1);
            }),
          nodeEntries: (function (prim) {
              return prim.nodeEntries();
            })
        };
}

export {
  MakeNodesIter ,
}
/* No side effect */
